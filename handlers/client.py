
from aiogram import Bot, types, Dispatcher
from  create_bot import dp, bot
from keyboards import kb1_client, kb2_client, ikb_links , kb_kazic_menu 
import random
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import requests
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

#@dp.message_handler(commands=['start']) 
async def start_cmd(message: types.Message):
	await message.answer(text = 'üì°–ë–æ—Ç SVGS —É –¥–æ–º–æ—Ñ–æ–Ω–∞ üëâüëà',reply_markup = kb1_client)
	await message.delete()

async def rap_cmd(message: types.Message):
    user_name = str(message.from_user.first_name)
    await bot.send_message(message.chat.id,f'{user_name}‚ùó‚ùó‚ùó –ñ–æ—Å–∫–∞ –Ω–∞–≤–∞–ª–∏–ª –∂–∏–¥–µ–Ω—å–∫–∏–º —Ä–µ–ø—á–∏–∫–æ–ºüí©',reply_markup = kb2_client)
    await message.delete()  

async def links_cmd(message: types.Message):
    await bot.send_message(message.chat.id,'üëá –°—Å—ã–ª–∫–∏ –æ—Ç Savages üëá',reply_markup = ikb_links) 
    await message.delete()

async def id_cmd(message: types.Message):
    user_id = str(message.from_user.id)
    await bot.send_message(message.chat.id,f'–¢–≤–æ–π ID: `{user_id}`',parse_mode='MarkdownV2')
    await message.delete()
    
async def id_kazic_entrance(message: types.Message):
    
    await bot.send_message(message.chat.id,'–ü—Ä–∏–≤–µ—Ç, –ª—É–¥–æ–º–∞–Ω–∏—â–µ',reply_markup = kb_kazic_menu)
    await message.delete()

async def id_kazic_exit(message: types.Message):
    
    await bot.send_message(message.chat.id,'–ü–æ–∫–∞, –ª—É–¥–æ–º–∞–Ω–∏—â–µ',reply_markup = kb2_client)
    await message.delete()


async def id_kazic_new(message: types.Message):
    user_name = str(message.from_user.first_name)
    kazic_list = ['\U0001F4A9','\U0001F4A3','\U0001F352','\U0001F347','\U0001F34C','\U0001F340','\U0001F349']
    kaz1 = random.choice(kazic_list)
    kaz2 = random.choice(kazic_list)
    kaz3 = random.choice(kazic_list)
    ikb_kazic = InlineKeyboardMarkup(row_width=3)
    ibk1 = InlineKeyboardButton (text = kaz1  ,callback_data='kaz1' )
    ibk2 = InlineKeyboardButton (text = kaz2 , callback_data= 'kaz2')
    ibk3 = InlineKeyboardButton (text = kaz3, callback_data= 'kaz3')
    ikb_kazic.add(ibk1,ibk2,ibk3)
    await bot.send_message(message.chat.id,f'{user_name} –ø—Ä–æ–¥–∞–ª –ø–æ—á–∫–∏ –∏ –∫—Ä—É—Ç–∏—Ç —Ñ–∞—Ä—Ç—É:',reply_markup = ikb_kazic)
    
    await message.delete()
    if kaz1==kaz2==kaz3:
        await bot.send_message(message.chat.id,f'üí∏üí∏üí∏{user_name}üí∏üí∏üí∏–æ–≥—Ä–∞–±–∏–ªüí∏üí∏üí∏—Ä–æ–±–æ—Ç–∞üí∏üí∏üí∏–ñ–ï–°–¢–¨üí∏üí∏üí∏–û–ùüí∏üí∏üí∏–ö–†–£–¢üí∏üí∏üí∏')
        
    elif kaz1==kaz2==kaz3=='\U0001F347':
        await bot.send_message(message.chat.id,f'{user_name} üí©üí©üí©—Å–º–∞—á–Ω–æ –æ–±–æ—Å—Ä–∞–ª—Å—èüí©üí©üí©')
        await message.delete()



async def id_exit(message: types.Message):
    await message.answer(text = '–ø–æ–∫–∞',reply_markup =ReplyKeyboardRemove())
    
    await message.delete()

'''
def getcat():
    #–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∫–æ—Ç–∏–∫–∞–º–∏
    try:
        r = requests.get('http://thecatapi.com/api/images/get?format=src')
        url = r.url
    except:
        url = get_cat()
        print('Error with cat parsing')
        pass
    return url



async def id_sendcat(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id, photo=getcat(), reply_markup=kb2_client)
    await message.delete()
'''
'''

#################–ú–ï–ú–´##########################
import asyncpraw
from config import ID_CLIENT, SECRET
reddit = asyncpraw.Reddit(client_id = ID_CLIENT,
                    client_secret = SECRET,
                    user_agent = 'svgsbot')

memes = []
TIMEOUT = 300
SUBREDDIT_NAME ='memes'
POST_LIMIT = 1



async def id_memes(message : types.Message):
    await bot.send_message(message.chat.id,text)

async def main():
    while True:
        await asyncio.sleep(TIMEOUT)
        memes_submissions = await reddit.subreddit(SUBREDDIT_NAME)
        memes_submissions = memes_submissions.new(limit = POST_LIMIT)
        item = await memes_submissions.__anext__()
        if item.title not in memes:
            memes.append(item.title)
            await send_message(chat_id,)
        
    
'''





'''
async def id_more_cats(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ—Ç–∏–∫–æ–≤"""
    await bot.send_photo(chat_id=message.chat.id, photo=getcat(), reply_markup=ikb_cats)
    await message.delete()
'''



################################################################################################################################################
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import requests
import speech_recognition as sr
import subprocess
import datetime
import ffmpeg




def audio_to_text(dest_name: str):
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∞—É–¥–∏–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ ".wav" –≤ —Ç–µ–∫—Å—Ç
    r = sr.Recognizer() # —Ç–∞–∫–æ–µ –≤–æ–æ–±—â–µ –Ω–∞–¥–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ç—å?
    # —Ç—É—Ç –º—ã —á–∏—Ç–∞–µ–º –Ω–∞—à .vaw —Ñ–∞–π–ª
    message = sr.AudioFile(dest_name)
    with message as source:
        audio = r.record(source)
    result = r.recognize_google(audio, language="ru_RU") # –∏—Å–ø–æ–ª—å–∑—É—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ç–µ–∫—Å—Ç, —Ç–∞–∫ –∂–µ —Ç—É—Ç –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —è–∑—ã–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    return result




logfile = str(datetime.date.today()) + '.log'

token = '5818134016:AAGVi1nnhuRE6AVh381LdDJ0A_dzdOOlg1A'

@dp.message_handler(content_types=['voice'])
async def get_audio_messages(message):
   #u_id = message.forward_from.first_name
    user_name1 = str(message.from_user.first_name)
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—É—Ö—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        
        # –ù–∏–∂–µ –ø—ã—Ç–∞–µ–º—Å—è –≤—ã—á–ª–µ–Ω–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞, –¥–∞ –∏ –≤–æ–æ–±—â–µ –±–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ —Å –º–µ—Å—Å–∞–≥–∏
        file_info = await bot.get_file(message.voice.file_id)
        path = os.path.splitext(file_info.file_path)[0] # –í–æ—Ç —Ç—É—Ç-—Ç–æ –∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: voice/file_2.oga)
        fname = os.path.basename(path) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É—Ç—å –≤ –∏–º—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: file_2.oga)
        doc = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token, file_info.file_path)) # –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—Å–ª–∞–Ω–Ω—É—é –≥–æ–ª–æ—Å–≤—É—Ö—É (–ê–≥–∞, –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∞–π–¥–∏–æ —Ñ–∞–π–ª–æ–≤ –∏ —Å–ª—É—à–∞—Ç—å –≤—Å–µ, —á—Ç–æ —Ç—ã —Ç–∞–º –≥–æ–≤–æ—Ä–∏—à—å. –ê –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç–∞–∫—É—é –±—è–∫—É –ø–æ–¥—Å–µ–ª—è—Ç –≤ –æ–≥—Ä–æ–º–Ω—ã–π —á–∞—Ç –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è [–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ, –∞—Ö–∞—Ö–∞—Ö–∞])
        with open(fname+'.oga', 'wb') as f:
            f.write(doc.content) # –≤–æ—Ç –∏–º–µ–Ω–Ω–æ —Ç—É—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å–∞–º–∞ –∞—É–¥–∏–æ-–º–µ—Å—Å–∞–≥–∞
        process = subprocess.run(['ffmpeg', '-i', fname+'.oga', fname+'.wav'])# –∑–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç—Ä–∞—à–Ω–æ–µ –ü–û ffmpeg, –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ .oga –≤ .vaw
        result = audio_to_text(fname+'.wav') # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç
        
        await bot.send_message(message.chat.id,f'üîá{user_name1}üîá —Å–∫–∞–∑–∞–ª : "{format(result)}"') # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–∏—Å–ª–∞–≤—à–µ–º—É —Ñ–∞–π–ª, –µ–≥–æ —Ç–µ–∫—Å—Ç
    except sr.UnknownValueError as e:
        # –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ—Ç—Å—ã–ª–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∑–∞–Ω–æ—Å–∏–º –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ –æ—à–∏–±–æ–∫
        await bot.send_message(message.from_user.id,  "–ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª")
        with open(logfile, 'a', encoding='utf-8') as f:
            f.write(str(datetime.datetime.today().strftime("%H:%M:%S")) + ':' + str(message.from_user.id) + ':' + str(message.from_user.first_name) + '_' + str(message.from_user.last_name) + ':' + str(message.from_user.username) +':'+ str(message.from_user.language_code) + ':Message is empty.\n')
    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –æ—à–∏–±–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∑–∞–Ω–æ—Å–∏—Ç—Å—è –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ –æ—à–∏–±–æ–∫
        await bot.send_message(message.from_user.id,  "–ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∞–≤—Ç–æ—Ä –¥–∏–±–∏–ª ")
        with open(logfile, 'a', encoding='utf-8') as f:
            f.write(str(datetime.datetime.today().strftime("%H:%M:%S")) + ':' + str(message.from_user.id) + ':' + str(message.from_user.first_name) + '_' + str(message.from_user.last_name) + ':' + str(message.from_user.username) +':'+ str(message.from_user.language_code) +':' + str(e) + '\n')
    finally:
        #–í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        #os.remove(fname+'.wav')
        os.remove(fname+'.oga')





def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(start_cmd, commands = ['start'])
    dp.register_message_handler(rap_cmd, text = ['üí∏–ù–∞–≤–∞–ª–∏—Ç—å —Ä–µ–ø–∞—Å—èüí∏'])
    dp.register_message_handler(links_cmd, text = ['üîóLinksüîó'])
    dp.register_message_handler(id_cmd, text = ['üîêGet my IDüîê'])
    dp.register_message_handler(id_kazic_entrance, text = ['üé∞–ö–∞–∑–∏–∫üé∞'])
    dp.register_message_handler(id_kazic_new, text = ['üîÑ–ö—Ä—É—Ç–∏—Ç—å'])
    dp.register_message_handler(id_kazic_exit, text = ['–í—ã—Ö–æ–¥‚è©'])
    dp.register_message_handler(id_exit, text = ['‚ùåEXIT‚ùå'])
   # dp.register_message_handler(id_more_cats, text = ['‚è©‚è©‚è©–ï—â–µ –±–æ–ª—å—à–µ –∫–∏—Å–∞–∫‚è™‚è™‚è™'])
    #dp.register_message_handler(id_sendcat, text = ['üòª–ö–æ—Ç–∏–∫–∏üòª'])
    #dp.register_message_handler(id_memes, text = ['‚ö°–ú–µ–º–µ—Å—ã‚ö°'])